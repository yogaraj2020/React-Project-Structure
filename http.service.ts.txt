import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';
import { Observable, throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

@Injectable({
  providedIn: 'root',
})
export class HttpService {
  private baseUrl = 'https://api.example.com'; // Replace with your API base URL

  constructor(private http: HttpClient) {}

  private handleError(error: HttpErrorResponse): Observable<never> {
    let errorMessage = 'An error occurred';
    if (error.error instanceof ErrorEvent) {
      errorMessage = error.error.message;
    } else {
      errorMessage = error.error || errorMessage;
    }
    return throwError(errorMessage);
  }

  get(endpoint: string, options?: object): Observable<any> {
    const url = `${this.baseUrl}/${endpoint}`;
    return this.http.get(url, options).pipe(catchError(this.handleError));
  }

  post(endpoint: string, data: any, options?: object): Observable<any> {
    const url = `${this.baseUrl}/${endpoint}`;
    return this.http.post(url, data, options).pipe(catchError(this.handleError));
  }

  // Add methods for put, patch, delete, etc.

}

API Call:-

import { Component, OnInit } from '@angular/core';
import { HttpService } from './http.service';

@Component({
  selector: 'app-my-component',
  templateUrl: './my-component.component.html',
})
export class MyComponent implements OnInit {
  constructor(private httpService: HttpService) {}

  ngOnInit() {
    this.httpService.get('users').subscribe(
      (data) => {
        // Handle successful response
      },
      (error) => {
        // Handle error
      }
    );
  }
}
