import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'titleCase'
})
export class TitleCasePipe implements PipeTransform {
  transform(value: string): string {
    if (!value) return '';
    return value.toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');
  }
}

<p>{{ 'hello world' | titleCase }}</p>
<!-- Output: Hello World -->


import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'ellipsis'
})
export class EllipsisPipe implements PipeTransform {
  transform(value: string, maxLength: number = 20): string {
    if (value.length <= maxLength) return value;
    return value.slice(0, maxLength) + '...';
  }
}


<p>{{ longText | ellipsis:30 }}</p>
<!-- Output: Truncated text with ellipsis -->


import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'filterArray'
})
export class FilterArrayPipe implements PipeTransform {
  transform(array: any[], searchTerm: string): any[] {
    if (!array || !searchTerm) return array;
    searchTerm = searchTerm.toLowerCase();
    return array.filter(item => item.name.toLowerCase().includes(searchTerm));
  }
}


<div *ngFor="let item of items | filterArray:searchTerm">{{ item.name }}</div>
<!-- Filters and displays items that match the search term -->


import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'currencyFormatter'
})
export class CurrencyFormatterPipe implements PipeTransform {
  transform(value: number, currencyCode: string = 'USD'): string {
    return new Intl.NumberFormat('en-US', { style: 'currency', currency: currencyCode }).format(value);
  }
}


<p>{{ price | currencyFormatter:'EUR' }}</p>
<!-- Output: Formatted currency value -->
